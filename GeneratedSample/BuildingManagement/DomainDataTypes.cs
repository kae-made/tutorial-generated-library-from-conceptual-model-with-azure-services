// ------------------------------------------------------------------------------
// <auto-generated>
//     This file is generated by tool.
//     Runtime Version : 1.0.0
//  
//     Updates this file cause incorrect behavior 
//     and will be lost when the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;

namespace BuildingManagement
{
    public enum DomainTypeEquipmentsState
    {
        Healthy,
        OutOfOrder
    }

    public enum DomainTypeWorkloadState
    {
        Requesting,
        Assigned,
        Scheduled,
        Supported,
        Completed
    }

    public class DomainTypeEnvironmentPhysicalQuantities
    {
        public double Temperature { get; set; }
        public double Humidity { get; set; }
        public double AtmosphericPressure { get; set; }
        public double CO2Concentration { get; set; }
        public double Brightness { get; set; }
        public DateTime MeasuredTime { get; set; }

        public static bool operator ==(DomainTypeEnvironmentPhysicalQuantities one, DomainTypeEnvironmentPhysicalQuantities other)
        {
            return (one.MeasuredTime == other.MeasuredTime);
        }

        public static bool operator !=(DomainTypeEnvironmentPhysicalQuantities one, DomainTypeEnvironmentPhysicalQuantities other)
        {
            return !(one == other);
        }

        public void Restore(IDictionary<string, object> value)
        {
            if (value.ContainsKey("Temperature"))
            {
                Temperature = DataTypeConverter.ConvertToDouble(value["Temperature"]);
            }
            if (value.ContainsKey("Humidity"))
            {
                Humidity = DataTypeConverter.ConvertToDouble(value["Humidity"]);
            }
            if (value.ContainsKey("AtmosphericPressure"))
            {
                AtmosphericPressure = DataTypeConverter.ConvertToDouble(value["AtmosphericPressure"]);
            }
            if (value.ContainsKey("CO2Concentration"))
            {
                CO2Concentration = DataTypeConverter.ConvertToDouble(value["CO2Concentration"]);
            }
            if (value.ContainsKey("Brightness"))
            {
                Brightness = DataTypeConverter.ConvertToDouble(value["Brightness"]);
            }
            if (value.ContainsKey("MeasuredTime"))
            {
                if (value["MeasuredTime"] is string)
                {
                    MeasuredTime = DateTime.Parse((string)value["MeasuredTime"]);
                }
                else
                {
                    MeasuredTime = (DateTime)value["MeasuredTime"];
                }
            }
        }
    }


    public static class DataTypeConverter
    {
        public static double ConvertToDouble(object value)
        {
            if (value is Int16)
            {
                return (double)((Int16)value);
            }
            else if (value is Int32)
            {
                return (double)((Int32)value);
            }
            else if (value is Int64)
            {
                return (double)((Int64)value);
            }
            else if (value is UInt16)
            {
                return (double)(UInt16)value;
            }
            else if (value is UInt32)
            {
                return (double)((UInt32)value);
            }
            else if (value is UInt64)
            {
                return (double)((UInt64)value);
            }
            else if (value is Decimal)
            {
                return (double)((Decimal)value);
            }
            else if (value is Single)
            {
                return (double)((Single)value);
            }
            else if (value is String)
            {
                return double.Parse((string)value);
            }
            else
            {
                return (double)value;
            }
        }
    }
}
